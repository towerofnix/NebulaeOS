<!DOCTYPE html>
<html>

<head>
    <style>
        * {
            user-select: none;
        }

        *:focus {
            outline: none;
        }

        :root,
        html,
        body {
            margin: 0;
            padding: 0;
            width: 100%;
            height: 100%;
        }

        body {
            background-color: white;
            color: black;
        }

        #title {
            position: fixed;
            top: 15px;
            left: 15px;
            font-size: 35px;
            font-family: Arial, Helvetica, sans-serif;
            font-weight: 600;
            margin: 15px;
        }

        #small-title {
            position: fixed;
            top: 75px;
            left: 15px;
            font-size: 25px;
            font-family: Arial, Helvetica, sans-serif;
            font-weight: 100;
            margin: 0px 15px;
        }

        #account-name,
        #account-password {
            position: fixed;
            left: 50%;
            top: 10%;
            transform: translate(-50%, 0%);
            width: 80%;
            font-size: 15px;
            height: 25px;
            padding: 10px;
            border: 1px lightgray solid;
            border-radius: 5px;
        }

        #account-password {
            top: 35%;
        }

        #account-name:focus,
        #account-password:focus {
            border: 2px skyblue solid;
            box-shadow: skyblue 0px 0px 5px 1px;
        }

        #account-tab {
            position: fixed;
            top: 50%;
            right: 20%;
            transform: translate(0%, -50%);
            height: 350px;
            width: 350px;
            background-color: white;
            border-radius: 5px;
            border: 1px lightgrey;
            box-shadow: lightgray 0 0 5px 2px;
            visibility: hidden;
        }

        #account-create {
            position: absolute;
            color: black;
            border-radius: 5px;
            border: 1px lightgray solid;
            background-color: white;
            padding: 15px;
            width: 150px;
            left: 50%;
            top: 70%;
            transform: translate(-50%);
        }

        #account-create:hover {
            box-shadow: skyblue 0px 0px 5px 1px;
            border: 1px skyblue solid;
        }

        #account-create:active {
            background-color: lightgray;
        }

        @keyframes spin {
            0% {
                transform: rotate(0deg) translate(-50%, -50%);
            }

            100% {
                transform: rotate(360deg) translate(-50%, -50%);
            }
        }

        #spinner {
            position: fixed;
            visibility: hidden;
            transform-origin: left top;
            top: 50%;
            left: 50%;
            width: 50px;
            height: 50px;
            transform: translate(-50%, -50%);
            border-style: none;
            border-width: 5px;
            border-bottom-style: solid;
            border-color: skyblue;
            border-radius: 50%;
            animation: spin 1s infinite linear;
        }
    </style>
</head>

<body>
    <h1 id="title">Let's get started!</h1>
    <h3 id="small-title">Press any key to continue.</h3>

    <div id="spinner"></div>

    <div id="account-tab">
        <input type="text" id="account-name" placeholder="New account name.">
        <input type="password" id="account-password" placeholder="New password.">
        <button id="account-create">Create</button>
    </div>

    <script>
        const sha1 = require("sha1")
        const fs = require("fs")
        const path = require("path")
        const {
            screen,
            remote
        } = require("electron")

        let winID = remote.getCurrentWindow().id

        if (winID !== 1) {
            document.body.innerHTML = ""
        }

        const title = document.querySelector("#title")
        const titleSmall = document.querySelector("#small-title")
        const accountTab = document.querySelector("#account-tab")
        const createAccountButton = document.querySelector("#account-create")
        const loader = document.querySelector("#spinner")
        const nameEnter = document.querySelector("#account-name")
        const passwordEnter = document.querySelector("#account-password")
        const rootDir = path.join(__dirname, "../")

        const promptLarge = ["Let's get started!", "Create an account.", "You're done!"]
        const promptSmall = ["Press any key to continue.", "Click create account when you're done.",
            "We're just going to restart, then it's all done."
        ]

        let page = 0

        document.documentElement.addEventListener("keydown", () => {
            if (page + 1 === 1) {
                accountTab.style.visibility = "visible"
                page++
                createAccountButton.addEventListener("click", () => {
                    page++
                    accountTab.style.visibility = "hidden"
                    loader.style.visibility = "visible"
                    fs.mkdirSync(rootDir + "/data", {
                        recursive: true
                    }, (err) => {
                        if (err) throw err
                    })
                    fs.mkdirSync(rootDir + "/users", {
                        recursive: true
                    }, (err) => {
                        if (err) throw err
                    })
                    fs.mkdirSync(rootDir + "/users/root/USER_DATA", {
                        recursive: true
                    }, (err) => {
                        if (err) throw err
                    })
                    fs.mkdirSync(rootDir + "/users/" + nameEnter.value + "/USER_DATA", {
                        recursive: true
                    }, (err) => {
                        if (err) throw err
                    })
                    fs.mkdirSync(rootDir + "/programs", {
                        recursive: true
                    }, (err) => {
                        if (err) throw err
                    })
                    let d = new Date()
                    fs.writeFileSync(rootDir + "/data/users.sys", JSON.stringify({
                        users: [{
                                name: nameEnter.value,
                                role: "admin",
                                password: sha1(passwordEnter.value),
                                image: "file:" + path.join(__dirname,
                                    'res/icons/default_user.png'),
                                background: "file:" + path.join(__dirname,
                                    'res/wallpapers/default_wallpaper.png'),
                                show: true,
                                lastSignin: d.getTime()
                            },
                            {
                                name: "root",
                                role: "admin",
                                password: sha1("root"),
                                image: "file:" + path.join(__dirname,
                                    'res/icons/default_user.png'),
                                background: "file:" + path.join(__dirname,
                                    'res/wallpapers/default_wallpaper.png'),
                                show: false,
                                lastSignin: -1
                            }
                        ]
                    }))

                    fs.writeFileSync(rootDir + "/users/" + nameEnter.value + "/USER_DATA/shortcuts.sys",
                        JSON.stringify([{
                            name: "Nebula Browser",
                            open: "NebulaBrowser"
                        }]))
                    loader.style.visibility = "hidden"
                    title.innerHTML = promptLarge[page]
                    titleSmall.innerHTML = promptSmall[page]
                })
            }
            title.innerHTML = promptLarge[page]
            titleSmall.innerHTML = promptSmall[page]
        })
    </script>
</body>

</html>